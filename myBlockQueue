import java.util.Random;
//循环队列
public class myBlockQueue {
    private int[] array = new int[2];
    private int front = 0;
    private int rear = 0;
    private int size = 0;
    public synchronized void put(int message) throws InterruptedException
    {
        while(size == array.length)
        {
            wait();
        }
        array[rear] = message;
        rear = (rear+1)%array.length;
        size++;
        notifyAll();
    }
    public synchronized



    int take() throws InterruptedException
    {
        while(size == 0)
        {
            wait();
        }
        int message = array[front];
        front = (front+1)%array.length;
        size--;
        notifyAll();
        return message;
    }
    private static final myBlockQueue queue = new myBlockQueue();
    private static class producer extends Thread{
        @Override
        public void run() {
            Random random = new Random();
            while(true)
            {
                try{
                    queue.put(random.nextInt(100));
                }catch(InterruptedException e)
                {
                    e.printStackTrace();
                }
            }
        }
    }
    private static class customer extends Thread{
        @Override
        public void run() {
            while(true)
            {
                try{
                    System.out.println(queue.take());
                }catch(InterruptedException e)
                {
                    e.printStackTrace();
                }

            }
        }
    }

    public static void main(String[] args) {
        Thread p1 = new producer();
        Thread p2 = new producer();
        Thread p3 = new producer();

        Thread c1 = new customer();
        Thread c2 = new customer();
        Thread c3 = new customer();
        Thread c4 = new customer();
        Thread c5 = new customer();
        p1.start();
        p2.start();
        p3.start();
        c1.start();
        c2.start();
        c3.start();
        c4.start();
        c5.start();
    }
}
